"""empty message

Revision ID: 64a749603fbc
Revises: 
Create Date: 2023-09-09 16:05:30.328431

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '64a749603fbc'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('OfferStatus',
    sa.Column('offerStatusID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('status', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('offerStatusID')
    )
    op.create_table('PaymentFrequency',
    sa.Column('paymentFrequencyID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('frequency', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('paymentFrequencyID')
    )
    op.create_table('PaymentStatus',
    sa.Column('paymentStatusID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('status', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('paymentStatusID')
    )
    op.create_table('TransactionStatus',
    sa.Column('transactionStatusID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('status', sa.String(length=30), nullable=False),
    sa.PrimaryKeyConstraint('transactionStatusID')
    )
    op.create_table('User',
    sa.Column('userID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('password', sa.String(length=120), nullable=False),
    sa.Column('firstName', sa.String(length=50), nullable=False),
    sa.Column('lastName', sa.String(length=50), nullable=False),
    sa.Column('email', sa.String(length=100), nullable=False),
    sa.Column('phoneNumber', sa.String(length=20), nullable=False),
    sa.Column('profilePictureLink', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('userID'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('BankDetails',
    sa.Column('bankID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('bankName', sa.String(), nullable=False),
    sa.Column('bankCardNumber', sa.String(length=16), nullable=False),
    sa.Column('bankAccountNumber', sa.String(length=8), nullable=False),
    sa.Column('bankSortCode', sa.String(length=6), nullable=False),
    sa.Column('bankIssueDate', sa.Date(), nullable=False),
    sa.Column('bankExpiryDate', sa.Date(), nullable=False),
    sa.Column('userID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['userID'], ['User.userID'], ),
    sa.PrimaryKeyConstraint('bankID')
    )
    op.create_table('Debtor',
    sa.Column('debtorID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('userID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['userID'], ['User.userID'], ),
    sa.PrimaryKeyConstraint('debtorID')
    )
    op.create_table('Dicom',
    sa.Column('dicomID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('dicomDocumentLink', sa.String(), nullable=False),
    sa.Column('dicomFileName', sa.String(length=50), nullable=False),
    sa.Column('userID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['userID'], ['User.userID'], ),
    sa.PrimaryKeyConstraint('dicomID')
    )
    op.create_table('GoogleOAuth',
    sa.Column('googleID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('googleOAuthID', sa.String(), nullable=False),
    sa.Column('googleName', sa.String(), nullable=False),
    sa.Column('googleProfilePicture', sa.String(), nullable=True),
    sa.Column('userID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['userID'], ['User.userID'], ),
    sa.PrimaryKeyConstraint('googleID'),
    sa.UniqueConstraint('googleOAuthID')
    )
    op.create_table('Identity',
    sa.Column('identityID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('identityNumber', sa.String(length=20), nullable=False),
    sa.Column('identityDocumentLink', sa.String(), nullable=False),
    sa.Column('identityFileName', sa.String(length=50), nullable=False),
    sa.Column('identityType', sa.String(length=15), nullable=False),
    sa.Column('userID', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['userID'], ['User.userID'], ),
    sa.PrimaryKeyConstraint('identityID')
    )
    op.create_table('Lender',
    sa.Column('lenderID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('userID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['userID'], ['User.userID'], ),
    sa.PrimaryKeyConstraint('lenderID')
    )
    op.create_table('LoanAdvertisement',
    sa.Column('loanAdvertisementID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('amount', sa.Numeric(precision=100), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=False),
    sa.Column('interest', sa.Integer(), nullable=False),
    sa.Column('negotiable', sa.Boolean(), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('dueDate', sa.DateTime(), nullable=False),
    sa.Column('lenderID', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['lenderID'], ['Lender.lenderID'], ),
    sa.PrimaryKeyConstraint('loanAdvertisementID'),
    sa.UniqueConstraint('negotiable')
    )
    op.create_table('ActiveLoan',
    sa.Column('activeLoanID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('loanAdvertisementID', sa.Integer(), nullable=False),
    sa.Column('lenderID', sa.Integer(), nullable=False),
    sa.Column('debtorID', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=False),
    sa.Column('originalAmount', sa.Numeric(), nullable=False),
    sa.Column('amountDue', sa.Numeric(), nullable=False),
    sa.Column('interest', sa.Integer(), nullable=False),
    sa.Column('dueDate', sa.DateTime(), nullable=False),
    sa.Column('paymentFrequency', sa.Integer(), nullable=False),
    sa.Column('transactionStatus', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['debtorID'], ['Debtor.debtorID'], ),
    sa.ForeignKeyConstraint(['lenderID'], ['Lender.lenderID'], ),
    sa.ForeignKeyConstraint(['loanAdvertisementID'], ['LoanAdvertisement.loanAdvertisementID'], ),
    sa.ForeignKeyConstraint(['paymentFrequency'], ['PaymentFrequency.paymentFrequencyID'], ),
    sa.ForeignKeyConstraint(['transactionStatus'], ['TransactionStatus.transactionStatusID'], ),
    sa.PrimaryKeyConstraint('activeLoanID')
    )
    op.create_table('LoanConditions',
    sa.Column('loanConditionID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('loanAdvertisementID', sa.Integer(), nullable=False),
    sa.Column('loanConditionDescription', sa.String(length=200), nullable=False),
    sa.ForeignKeyConstraint(['loanAdvertisementID'], ['LoanAdvertisement.loanAdvertisementID'], ),
    sa.PrimaryKeyConstraint('loanConditionID')
    )
    op.create_table('LoanOffer',
    sa.Column('loanOfferID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('loanAdvertisementID', sa.Integer(), nullable=False),
    sa.Column('lenderID', sa.Integer(), nullable=False),
    sa.Column('debtorID', sa.Integer(), nullable=False),
    sa.Column('createdAt', sa.DateTime(), nullable=False),
    sa.Column('updatedAt', sa.DateTime(), nullable=False),
    sa.Column('interest', sa.Integer(), nullable=False),
    sa.Column('dueDate', sa.DateTime(), nullable=False),
    sa.Column('paymentFrequency', sa.Integer(), nullable=False),
    sa.Column('offerStatus', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['debtorID'], ['Debtor.debtorID'], ),
    sa.ForeignKeyConstraint(['lenderID'], ['Lender.lenderID'], ),
    sa.ForeignKeyConstraint(['loanAdvertisementID'], ['LoanAdvertisement.loanAdvertisementID'], ),
    sa.ForeignKeyConstraint(['offerStatus'], ['OfferStatus.offerStatusID'], ),
    sa.ForeignKeyConstraint(['paymentFrequency'], ['PaymentFrequency.paymentFrequencyID'], ),
    sa.PrimaryKeyConstraint('loanOfferID')
    )
    op.create_table('Contract',
    sa.Column('contractID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('activeLoanID', sa.Integer(), nullable=False),
    sa.Column('contractDocumentLink', sa.String(), nullable=False),
    sa.Column('contractFileName', sa.String(length=50), nullable=False),
    sa.ForeignKeyConstraint(['activeLoanID'], ['ActiveLoan.activeLoanID'], ),
    sa.PrimaryKeyConstraint('contractID')
    )
    op.create_table('TransactionPayment',
    sa.Column('transactionPaymentID', sa.Integer(), autoincrement=True, nullable=False),
    sa.Column('activeLoanID', sa.Integer(), nullable=False),
    sa.Column('amountPaid', sa.Numeric(), nullable=False),
    sa.Column('datePaid', sa.DateTime(), nullable=False),
    sa.Column('paymentStatus', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['activeLoanID'], ['ActiveLoan.activeLoanID'], ),
    sa.ForeignKeyConstraint(['paymentStatus'], ['PaymentStatus.paymentStatusID'], ),
    sa.PrimaryKeyConstraint('transactionPaymentID')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('TransactionPayment')
    op.drop_table('Contract')
    op.drop_table('LoanOffer')
    op.drop_table('LoanConditions')
    op.drop_table('ActiveLoan')
    op.drop_table('LoanAdvertisement')
    op.drop_table('Lender')
    op.drop_table('Identity')
    op.drop_table('GoogleOAuth')
    op.drop_table('Dicom')
    op.drop_table('Debtor')
    op.drop_table('BankDetails')
    op.drop_table('User')
    op.drop_table('TransactionStatus')
    op.drop_table('PaymentStatus')
    op.drop_table('PaymentFrequency')
    op.drop_table('OfferStatus')
    # ### end Alembic commands ###
